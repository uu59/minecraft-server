#!/usr/bin/env bash

set -ue

main() {
  : ${SESS:=forge}
  : ${DATA_DIR:=/tmp}
  DATA="$DATA_DIR/minecraft-$SESS"
  mkdir -p "$DATA"

  if [ $# -eq 0 ];then
    usage
    exit 1
  fi
  cmd=$1
  shift

  if declare -f "$cmd" > /dev/null; then
    $cmd "$@"
  else
    usage
    exit 1
  fi
}

usage() {
  cat <<EOF

Usage $0 <command>

Commands:
  status      Display $SESS server status
  start       Start $SESS server
  stop        Stop  $SESS server
  backup      Start backup $SESS server data
  build       Build Docker image for $SESS

Minecraft server data under the $DATA_DIR by default,
but you can specify it with \`DATA_DIR\` environment
such as \`DATA_DIR=/var/minecraft $0 start\`
EOF
}

send-keys() {
  tmux send-keys -t "$SESS:0" "$(printf "$1\r")"
}

is_running() {
  grep -q -F "$SESS: " <<< "$(tmux ls)" && grep -q -F "minecraft-$SESS:latest" <<< "$(docker ps)"
  echo $?
}

build() {
  docker build -t minecraft-base -f ./Dockerfile .
  docker build -t "minecraft-$SESS" -f "./Dockerfile-$SESS" .
}

status() {
  echo -n "$SESS server is "
  if [ $(is_running) -eq 0 ];then
    echo launched
  else
    echo no launched
  fi
}

start-tmux-session() {
  if [ $(is_running) -ne 0 ]; then
    TMUX= tmux new -s "$SESS" -d
  fi
}

start() {
  start-tmux-session
  # logs are $DATA/logs/*.log
  send-keys "docker run -i -t -v $DATA:/minecraft/data minecraft-$SESS"
  echo Running in tmux session "$SESS", \`tmux a -s $SESS\` to attach.
}

stop() {
  if [ $(is_running) -ne 0 ];then
    echo already stopped
    return 0
  fi
  echo Stopping..
  send-keys "stop"
}

backup() {
  TAR="./$SESS-$(date +%Y%m%d-%H%M%S).tar" 
  time -p {
    send-keys "save-all"
    send-keys "save-off"
    sleep 1
    tar cf "$TAR" -C "$DATA/.." "./$(basename $DATA)"
    send-keys "save-on"
  }
  xz -1 "$TAR"
}

main "$@"
