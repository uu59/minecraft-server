#!/usr/bin/env bash

set -ue

ROOT_DIR="$(cd $(dirname $0); pwd)"
cd "$ROOT_DIR"
: ${DATA_DIR:=/tmp}
DATA="$DATA_DIR/minecraft-forge"
mkdir -p "$DATA"

WORK_DIR="$ROOT_DIR/work"
BACKUP_DIR="$ROOT_DIR/backup"

# JAR="forge-1.7.10-10.13.4.1448-1.7.10-universal.jar"
: ${JAR:="forge-1.8-11.14.3.1450-universal.jar"}
JAR_PATH="$ROOT_DIR/jar/$JAR"
: ${JVM_OPTIONS:="-server -d64 \
  -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalPacing \
  -XX:+AggressiveOpts \
  -XX:MaxGCPauseMillis=30 -XX:ParallelGCThreads=2 \
  -Xloggc:logs/gc.log -XX:-UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=10m \
  -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps \
  -Xms2G -Xmx2G \
  "}

main() {
  init-directories
  if [ $# -eq 0 ];then
    usage
    exit 1
  fi
  cmd=$1
  shift

  if declare -f "$cmd" > /dev/null; then
    $cmd "$@"
  else
    usage
    exit 1
  fi
}

usage() {
  cat <<EOF

Usage $0 <command>

Commands:
  status      Display server status
  start       Start server
  stop        Stop server
  backup      Start backup server data

Minecraft server data under the $DATA_DIR by default,
but you can specify it with \`DATA_DIR\` environment
such as \`DATA_DIR=/var/minecraft $0 start\`
EOF
}

init-directories() {
  mkdir -p "$ROOT_DIR"/{jar,backup,mods,work}
}

send-keys() {
  tmux send-keys -t "forge:0" "$(printf "$1\r")"
}

is_running() {
  grep -q -F "forge: " <<< "$(tmux ls)" && grep -q -F "$(basename $JAR)" <<< "$(ps aux)"
  echo $?
}

status() {
  echo -n "server is "
  if [ $(is_running) -eq 0 ];then
    echo running
  else
    echo stopped
  fi
}

start-tmux-session() {
  if ! grep -F -q "forge" <<< "$(tmux ls)"; then
    TMUX= tmux new -s "forge" -d
  fi
}

start() {
  start-tmux-session
  if [ $(is_running) -eq 0 ];then
    echo Running in tmux session, \`tmux a -s forge\` to attach.
    return 0
  fi
  port=${1:-25565}
  mkdir -p "$DATA"/{world,logs}
  [ ! -L "$WORK_DIR/logs" ] && ln -s "$DATA/logs"  "$WORK_DIR/logs"
  [ ! -L "$WORK_DIR/world" ] && ln -s "$DATA/world" "$WORK_DIR/world"
  [ ! -L "$WORK_DIR/mods" ] && ln -s "$ROOT_DIR/mods" "$WORK_DIR/mods"
  echo eula=true > "$WORK_DIR/eula.txt"
  send-keys "cd $WORK_DIR"
  send-keys "java -jar $JVM_OPTIONS $JAR_PATH nogui"
  echo Running in tmux session, \`tmux a -s forge\` to attach.
}

stop() {
  if [ $(is_running) -ne 0 ];then
    echo already stopped
    return 0
  fi
  echo Stopping..
  send-keys "stop"
}

backup() {
  TAR="$BACKUP_DIR/forge-$(date +%Y%m%d)/$(date +%H%M%S).tar"
  mkdir -p "$(dirname $TAR)"
  time -p {
    cd $ROOT_DIR
    send-keys "save-all"
    send-keys "save-off"
    send-keys "say Start backup.."
    sleep 5
    nice -n 1 tar cvf "$TAR" --dereference -C work ./ --exclude logs --exclude dynmap/web
    send-keys "save-on"
    send-keys 'say Finish backup!'
  }
  nice -n 5 xz -1 "$TAR"
}

main "$@"
